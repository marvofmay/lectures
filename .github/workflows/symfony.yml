name: Symfony

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
        database:
            image: mongo:8
            env:
                MONGO_INITDB_ROOT_USERNAME: "root"
                MONGO_INITDB_ROOT_PASSWORD: "password"
                MONGO_INITDB_DATABASE: "database"
            ports:
                - "27017:27017"
    env:
        MONGODB_URL: 'mongodb://root:password@localhost:27017'
        DATABASE_URI: 'mongodb://mongo:27017/apps-recruitment-task'
        MONGODB_DB: 'apps-recruitment-task'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql, intl, bcmath
          coverage: none

      - name: Install Composer dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Set up environment file
        run: cp .env.test .env       
  
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --configuration=phpunit.xml.dist 

# jobs:
#   symfony-tests:
#     runs-on: ubuntu-latest
#     steps:
#     #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
#     # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
#     # uses: shivammathur/setup-php@v2
#     - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
#       with:
#         php-version: '8.2'
#     - uses: actions/checkout@v4
#     - name: Copy .env.test.local
#       run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
#     - name: Cache Composer packages
#       id: composer-cache
#       uses: actions/cache@v3
#       with:
#         path: vendor
#         key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-php-
#     - name: Install Dependencies
#       run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#     - name: Create Database
#       run: |
#         mkdir -p data
#         touch data/database.sqlite
#     - name: Execute tests (Unit and Feature tests) via PHPUnit
#       env:
#         DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
#       run: vendor/bin/phpunit
