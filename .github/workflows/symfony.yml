name: Symfony

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
        mongodb:
            image: mongo:8
            env:
                MONGO_INITDB_ROOT_USERNAME: "primary"
                MONGO_INITDB_ROOT_PASSWORD: "password"
            ports:
                - "27017:27017"

    continue-on-error: true

    env:
        MONGODB_URL: 'mongodb://primary:password@localhost:27017'

    # steps:
    #   - uses: actions/checkout@v3

    #   - name: Install mongosh
    #     run: |
    #       sudo apt-get install gnupg
    #       wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
    #       echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
    #       sudo apt-get update
    #       sudo apt-get install -y mongodb-mongosh
    #       mongosh --version

    #   - name: Initalize MongoDB
    #     run: |
    #       mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin <<EOF
    #         db = db.getSiblingDB('APP-DB');
    #         db.createUser({ user: 'APP-USERNAME', pwd: 'APP-PASSWORD', roles: [{ role: 'readWrite', db: 'APP-DB' }] })
    #         db.createCollection('APP-COLLECTION');
    #       EOF

      # - name: Run Symfony console commands
      #   run: |
      #     php bin/console doctrine:mongodb:schema:create
      #     php bin/console cache:clear

      # - name: Run Symfony console commands
      #   run: |
      #     php bin/console app:fill-user-data
      #     php bin/console cache:clear
     
      # - name: Run PHPStan
      #   run: vendor/bin/phpstan analyse --memory-limit=512M

      # - name: Run PHPUnit tests
      #   run: vendor/bin/phpunit --testdox  

# jobs:
#   symfony-tests:
#     runs-on: ubuntu-latest
#     steps:
#     #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
#     # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
#     # uses: shivammathur/setup-php@v2
#     - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
#       with:
#         php-version: '8.2'
#     - uses: actions/checkout@v4
#     - name: Copy .env.test.local
#       run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
#     - name: Cache Composer packages
#       id: composer-cache
#       uses: actions/cache@v3
#       with:
#         path: vendor
#         key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-php-
#     - name: Install Dependencies
#       run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#     - name: Create Database
#       run: |
#         mkdir -p data
#         touch data/database.sqlite
#     - name: Execute tests (Unit and Feature tests) via PHPUnit
#       env:
#         DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
#       run: vendor/bin/phpunit
